//
// Generated file, do not edit! Created by nedtool 5.5 from inet/applications/udpapp/InfoFL.msg.
//

#ifndef __INFOFL_M_H
#define __INFOFL_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// dll export symbol
#ifndef INET_API
#  if defined(INET_EXPORT)
#    define INET_API  OPP_DLLEXPORT
#  elif defined(INET_IMPORT)
#    define INET_API  OPP_DLLIMPORT
#  else
#    define INET_API
#  endif
#endif



class InfoFL;
#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk

/**
 * Class generated from <tt>inet/applications/udpapp/InfoFL.msg:18</tt> by nedtool.
 * <pre>
 * class InfoFL extends inet::FieldsChunk
 * {
 *     uint32_t sequenceNumber;
 *     unsigned int sno;
 *     simtime_t payloadTimestamp;
 * 
 *     double globalInfo;
 *     int srcId;
 * 
 * 
 *     double x_pos;
 *     double y_pos;
 * 
 * }
 * </pre>
 */
class INET_API InfoFL : public ::inet::FieldsChunk
{
  protected:
    uint32_t sequenceNumber = 0;
    unsigned int sno = 0;
    omnetpp::simtime_t payloadTimestamp = SIMTIME_ZERO;
    double globalInfo = 0;
    int srcId = 0;
    double x_pos = 0;
    double y_pos = 0;

  private:
    void copy(const InfoFL& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const InfoFL&);

  public:
    InfoFL();
    InfoFL(const InfoFL& other);
    virtual ~InfoFL();
    InfoFL& operator=(const InfoFL& other);
    virtual InfoFL *dup() const override {return new InfoFL(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual uint32_t getSequenceNumber() const;
    virtual void setSequenceNumber(uint32_t sequenceNumber);
    virtual unsigned int getSno() const;
    virtual void setSno(unsigned int sno);
    virtual omnetpp::simtime_t getPayloadTimestamp() const;
    virtual void setPayloadTimestamp(omnetpp::simtime_t payloadTimestamp);
    virtual double getGlobalInfo() const;
    virtual void setGlobalInfo(double globalInfo);
    virtual int getSrcId() const;
    virtual void setSrcId(int srcId);
    virtual double getX_pos() const;
    virtual void setX_pos(double x_pos);
    virtual double getY_pos() const;
    virtual void setY_pos(double y_pos);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const InfoFL& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, InfoFL& obj) {obj.parsimUnpack(b);}

#endif // ifndef __INFOFL_M_H

