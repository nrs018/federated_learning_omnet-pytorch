//
// Generated file, do not edit! Created by nedtool 5.5 from lte/stack/pdcp_rrc/packet/LteRohcPdu.msg.
//

#ifndef __LTEROHCPDU_M_H
#define __LTEROHCPDU_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// dll export symbol
#ifndef INET_API
#  if defined(INET_EXPORT)
#    define INET_API  OPP_DLLEXPORT
#  elif defined(INET_IMPORT)
#    define INET_API  OPP_DLLIMPORT
#  else
#    define INET_API
#  endif
#endif



class LteRohcPdu;
#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk

// cplusplus {{
   using namespace inet;
// }}

/**
 * Class generated from <tt>lte/stack/pdcp_rrc/packet/LteRohcPdu.msg:28</tt> by nedtool.
 * <pre>
 * class LteRohcPdu extends inet::FieldsChunk
 * {
 *     inet::B origSizeTransportHeader;
 *     inet::B origSizeIpHeader;
 * }
 * </pre>
 */
class INET_API LteRohcPdu : public ::inet::FieldsChunk
{
  protected:
    inet::B origSizeTransportHeader = B(-1);
    inet::B origSizeIpHeader = B(-1);

  private:
    void copy(const LteRohcPdu& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const LteRohcPdu&);

  public:
    LteRohcPdu();
    LteRohcPdu(const LteRohcPdu& other);
    virtual ~LteRohcPdu();
    LteRohcPdu& operator=(const LteRohcPdu& other);
    virtual LteRohcPdu *dup() const override {return new LteRohcPdu(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual inet::B getOrigSizeTransportHeader() const;
    virtual void setOrigSizeTransportHeader(inet::B origSizeTransportHeader);
    virtual inet::B getOrigSizeIpHeader() const;
    virtual void setOrigSizeIpHeader(inet::B origSizeIpHeader);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const LteRohcPdu& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, LteRohcPdu& obj) {obj.parsimUnpack(b);}

#endif // ifndef __LTEROHCPDU_M_H

