[General]
image-path=../../images
output-scalar-file-append = false
sim-time-limit=1000s
network = SingleCell
**.routingRecorder.enabled = false
**.vector-recording = false
*.configurator.config = xmldoc("demo.xml")

*.s.app[0].re = ${1..30}
################ Mobility parameters #####################
# *
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false

############### Number of Resource Blocks ################
**.numRbDl = 500
**.numRbUl = 500
**.binder.numBands = 500 # this value should be kept equal to the number of RBs

############### Transmission Power ##################
**.ueTxPower = 400# 26
**.eNodeBTxPower = 10000 # 40

# connect each UE to the eNB
**.C[*].macCellId = 1
**.C[*].masterId = 1
**.s.macCellId = 1
**.s.masterId = 1

*.eNB.mobility.initialX = 2500m
*.eNB.mobility.initialY = 10m
*.s.mobility.typename = "StationaryMobility"
*.s.mobility.initialX = 2600m
*.s.mobility.initialY = 50m

# Configurator settings
*.configurator.dumpAddresses = true
*.configurator.dumpTopology = true
*.configurator.dumpLinks = true
*.configurator.dumpRoutes = true
**.ipv4.arp.typename = "GlobalArp"
*.*.ipv4.routingTable.netmaskRoutes = ""


*.numUe = ${numUE = 17}
**.modelSize = 5000000B
*.s.numApps = ${numUE}
*.C[*].numApps = 1
*.s.app[*].typename = "TcpuploadMSinkFL"
*.s.app[*].localPort = 3000 + ancestorIndex(0)


*.C[*].app[*].typename = "TcpuploadMSessionFL"
*.C[*].app[*].connectAddress = "s"#"C["+string(ancestorIndex(0))+"]" # obtain the address of the client by reading its index in the array of udp Apps
*.C[*].app[*].connectPort = 3000 + ancestorIndex(1)
*.C[*].app[*].sendBytes = 5000000B
*.C[*].app[*].localPort = 3088 + ancestorIndex(0)
#*.s.app[*].tOpen = 0.015s
#*.s.app[*].tSend = 0.02s
*.C[*].app[*].tClose = -1s


#*.s.numApps = ${numUE}
#*.s.app[*].typename = "TcpSinkFL"
#*.s.app[*].localPort = 3000 + ancestorIndex(0)
#
#
#*.numUe = ${numUE = 17}
#**.modelSize = 5000000B
#*.C[*].numApps = 1
#*.C[*].app[0].typename = "TcpSessionFL"
#*.C[*].app[0].connectAddress = "s" # obtain the address of the client by reading its index in the array of udp Apps
#*.C[*].app[0].connectPort = 3000 + ancestorIndex(1)
#*.C[*].app[0].sendBytes = 5000000B
#*.C[*].app[0].localPort = 3088 + ancestorIndex(0)
##*.C[*].app[0].tOpen = 0.015s
##*.C[*].app[0].tSend = 0.02s
#*.C[*].app[0].tClose = -1s


*.C[0].app[0].tOpen=35.757s
*.C[1].app[0].tOpen=35.98s
*.C[2].app[0].tOpen=36.857s
*.C[3].app[0].tOpen=37.205s
*.C[4].app[0].tOpen=43.402s
*.C[5].app[0].tOpen=58.494s
*.C[6].app[0].tOpen=110.726s
*.C[7].app[0].tOpen=114.976s
*.C[8].app[0].tOpen=115.292s
*.C[9].app[0].tOpen=115.837s
*.C[10].app[0].tOpen=176.782s
*.C[11].app[0].tOpen=177.855s
*.C[12].app[0].tOpen=191.399s
*.C[13].app[0].tOpen=278.695s
*.C[14].app[0].tOpen=518.307s
*.C[15].app[0].tOpen=681.787s
*.C[16].app[0].tOpen=844.055s

*.C[0].app[0].tSend=35.757s
*.C[1].app[0].tSend=35.98s
*.C[2].app[0].tSend=36.857s
*.C[3].app[0].tSend=37.205s
*.C[4].app[0].tSend=43.402s
*.C[5].app[0].tSend=58.494s
*.C[6].app[0].tSend=110.726s
*.C[7].app[0].tSend=114.976s
*.C[8].app[0].tSend=115.292s
*.C[9].app[0].tSend=115.837s
*.C[10].app[0].tSend=176.782s
*.C[11].app[0].tSend=177.855s
*.C[12].app[0].tSend=191.399s
*.C[13].app[0].tSend=278.695s
*.C[14].app[0].tSend=518.307s
*.C[15].app[0].tSend=681.787s
*.C[16].app[0].tSend=844.055s



*.C[*].mobility.typename = "StationaryMobility"

*.C[*].mobility.initialY = 50m

*.C[0].mobility.initialX=669.992m
*.C[1].mobility.initialX=1824.72m
*.C[2].mobility.initialX=146.062m
*.C[3].mobility.initialX=4600.36m
*.C[4].mobility.initialX=1084.21m
*.C[5].mobility.initialX=2686.46m
*.C[6].mobility.initialX=2856.53m
*.C[7].mobility.initialX=2801.38m
*.C[8].mobility.initialX=166.702m
*.C[9].mobility.initialX=1386.9m
*.C[10].mobility.initialX=3637.45m
*.C[11].mobility.initialX=2102.15m
*.C[12].mobility.initialX=4927.3m
*.C[13].mobility.initialX=3054.78m
*.C[14].mobility.initialX=95.968m
*.C[15].mobility.initialX=4770m
*.C[16].mobility.initialX=250.952m


