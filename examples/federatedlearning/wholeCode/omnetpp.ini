[General]
image-path=../../images
output-scalar-file-append = false
sim-time-limit=28s
network = SingleCell
**.routingRecorder.enabled = false
**.vector-recording = false
*.configurator.config = xmldoc("demo.xml")
repeat = 20
**.round = ${repetition}
#**.randomSeed = ${repetition}

################ Mobility parameters #####################
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
*.s.mobility.initFromDisplayString = false

######################### sumo map #####################
*.sumomap.map = "osm.sumocfg"

############### Number of Resource Blocks ################
**.numRbDl = 200
**.numRbUl = 200
**.binder.numBands = 200 # this value should be kept equal to the number of RBs

# enable handover
#**.lteNic.phy.enableHandover = true

## X2 configuration
#*.eNB*.numX2Apps = 2    # one x2App per peering eNodeB
#*.eNB0.x2App[0].server.localPort = 2000 
#*.eNB1.x2App[0].server.localPort = 2001 
#*.eNB2.x2App[0].server.localPort = 2002 
#*.eNB3.x2App[0].server.localPort = 2003 
#*.eNB0.x2App[1].server.localPort = 2004
#*.eNB1.x2App[1].server.localPort = 2005 
#*.eNB2.x2App[1].server.localPort = 2006 
#*.eNB3.x2App[1].server.localPort = 2007 

#*.eNB0.x2App[0].client.connectAddress = "eNB1%x2ppp0" 
#*.eNB0.x2App[1].client.connectAddress = "eNB3%x2ppp0"
#
#*.eNB1.x2App[0].client.connectAddress = "eNB0%x2ppp0" 
#*.eNB1.x2App[1].client.connectAddress = "eNB2%x2ppp0"
#
#*.eNB2.x2App[0].client.connectAddress = "eNB1%x2ppp0" 
#*.eNB2.x2App[1].client.connectAddress = "eNB3%x2ppp0" 
#
#*.eNB3.x2App[0].client.connectAddress = "eNB0%x2ppp0" 
#*.eNB3.x2App[1].client.connectAddress = "eNB2%x2ppp0" 

############### Transmission Power ##################
**.ueTxPower = 26# 26 default is 26 correspongs to 400
**.eNodeBTxPower = 40 # 40 default is 40

# connect each UE to the eNB
**.V[*].macCellId = 1
**.V[*].masterId = 1
**.s.macCellId = 1
**.s.masterId = 1

*.eNB.mobility.initialX = 1000m
*.eNB.mobility.initialY = 500m
*.eNB.mobility.typename = "StationaryMobility"
*.s.mobilityType="StationaryMobility"
*.s.**.initialX = 1000m
*.s.**.initialY = 500m
*.s.**.initialZ = 0m
*.V[*].mobilityType = "SUMOMobility"
#*.V[*].mobility.initialX = uniform(1500m, 2000m)#uniform(0m,4990m)
#*.V[*].mobility.initialX = uniform(1500m, 2000m)#uniform(0m,4990m)


#*.V[*].mobility.typename = "myMobility"#"VeinsInetMobility"
*.V[*].mobility.constraintAreaMinX = 0m
*.V[*].mobility.constraintAreaMinY = 0m
#*.V[*].mobility.constraintAreaMinZ = 0m
*.V[*].mobility.constraintAreaMaxX = 2000m
*.V[*].mobility.constraintAreaMaxY = 2000m
#*.V[*].mobility.constraintAreaMaxZ = 10m


# Configurator settings
*.configurator.dumpAddresses = true
*.configurator.dumpTopology = true
*.configurator.dumpLinks = true
*.configurator.dumpRoutes = true
**.ipv4.arp.typename = "GlobalArp"
*.*.ipv4.routingTable.netmaskRoutes = ""

**.numClient = ${numClientINI = 100}
**.TrainingDeadline = ${TrainingDeadline = 16s}

*.V[*].numApps = 4
*.V[*].app[0].typename = "ClientSink"
*.V[*].app[0].localPort = 3000

*.V[*].app[1].typename = "exchangeInfo_broadcast"
*.V[*].app[1].destAddresses = "224.0.0.9"
*.V[*].app[1].destPort = 6000
*.V[*].app[1].messageLength = 30B
*.V[*].app[1].sendInterval = 0.1s
*.V[*].app[1].startTime = uniform(1s,1.2s)
*.V[*].app[1].joinLocalMulticastGroups = true
**.checkInterval = 3
#*.V[*].app[1].globalInfo = uniform(1,10)


*.V[*].app[2].typename = "exchangeInfo_sink"
*.V[*].app[2].localPort = 6000
*.V[*].app[2].multicastGroup = "224.0.0.9"

*.V[*].app[3].typename = "upload_ClientSession"
*.V[*].app[3].connectAddress = "192.168.0.2"#"s" #"C[" + string(ancestorIndex(0)) + "]" # obtain the address of the client by reading its index in the array of udp Apps
*.V[*].app[3].connectPort = 9000# + ancestorIndex(1)
*.V[*].app[3].sendBytes = ${modelSize}
*.V[*].app[3].localPort = 8000
*.V[*].app[3].tOpen = ${TrainingDeadline}
*.V[*].app[3].tSend = ${TrainingDeadline}
*.V[*].app[3].tClose = -1s
*.V[*].app[3].SelectClientNumPerCoverage = 10
**.selectionRange = 2000m

**.modelSize = ${modelSize = 50000B} # default is 5000000B = 5MiB
*.s.numApps = ${numClientINI} + 1


#*.s.app[0..214].typename = "Broadcast"
#*.s.app[0..214].connectAddress = "192.168.0." + string(3 + ancestorIndex(0)) #"C[" + string(ancestorIndex(0)) + "]" # obtain the address of the client by reading its index in the array of udp Apps
#*.s.app[0..214].connectPort = 3000
#*.s.app[0..214].sendBytes = ${modelSize}
#*.s.app[0..214].localPort = 4000 + ancestorIndex(0)
#*.s.app[0..214].tOpen = 0.01s
#*.s.app[0..214].tSend = 0.015s
#*.s.app[0..214].tClose = -1s
#
#*.s.app[215].typename = "upload_ServerSink"
#*.s.app[215].localPort = 9000

*.s.app[0..99].typename = "Broadcast"
*.s.app[0..99].connectAddress = "192.168.0." + string(3 + ancestorIndex(0)) #"C[" + string(ancestorIndex(0)) + "]" # obtain the address of the client by reading its index in the array of udp Apps
*.s.app[0..99].connectPort = 3000
*.s.app[0..99].sendBytes = ${modelSize}
*.s.app[0..99].localPort = 4000 + ancestorIndex(0)
*.s.app[0..99].tOpen = 1.01s
*.s.app[0..99].tSend = 1.015s
*.s.app[0..99].tClose = -1s

*.s.app[100].typename = "upload_ServerSink"
*.s.app[100].localPort = 9000

# Ieee80211Interface
**.wlan[0].opMode = "p"
**.wlan[0].radio.typename = "Ieee80211DimensionalRadio"
**.wlan[0].radio.bandName = "5.9 GHz"
**.wlan[0].radio.channelNumber = 3
**.wlan[0].radio.transmitter.power = 20000mW
**.wlan[0].radio.bandwidth = 10 MHz
**.wlan[*].radio.antenna.mobility.typename = "AttachedMobility"
**.wlan[*].radio.antenna.mobility.mobilityModule = "^.^.^.^.mobility"
**.wlan[*].radio.antenna.mobility.offsetX = -2.5m
**.wlan[*].radio.antenna.mobility.offsetZ = 1.5m
**.wlan[*].radio.antenna.mobility.constraintAreaMinX = 0m
**.wlan[*].radio.antenna.mobility.constraintAreaMaxX = 0m
**.wlan[*].radio.antenna.mobility.constraintAreaMinY = 0m
**.wlan[*].radio.antenna.mobility.constraintAreaMaxY = 0m

#*.manager.launchConfig = xmldoc("erlangen.launchd.xml")
#*.manager.launchConfig = xmldoc("osm.launchd.xml")
#*.physicalEnvironment.config = xmldoc("obstacles.xml")

**.channelModel.dynamic_los = true

*.V[*].app[0].computationCapability = uniform(1,20)

# 已经在exchangeInfo_sink.cc 文件中对sampleQuantity变量初始化
#*.V[0].app[1].sampleQuantity=4500
#*.V[1].app[1].sampleQuantity=4500
#*.V[2].app[1].sampleQuantity=4500
#*.V[3].app[1].sampleQuantity=4500
#*.V[4].app[1].sampleQuantity=4500
#*.V[5].app[1].sampleQuantity=4500
#*.V[6].app[1].sampleQuantity=4500
#*.V[7].app[1].sampleQuantity=4500
#*.V[8].app[1].sampleQuantity=4500
#*.V[9].app[1].sampleQuantity=4500
#*.V[10].app[1].sampleQuantity=4500
#*.V[11].app[1].sampleQuantity=4500
#*.V[12].app[1].sampleQuantity=45
#*.V[13].app[1].sampleQuantity=45
#*.V[14].app[1].sampleQuantity=45
#*.V[15].app[1].sampleQuantity=45
#*.V[16].app[1].sampleQuantity=45
#*.V[17].app[1].sampleQuantity=45
#*.V[18].app[1].sampleQuantity=45
#*.V[19].app[1].sampleQuantity=45
#*.V[20].app[1].sampleQuantity=45
#*.V[21].app[1].sampleQuantity=45
#*.V[22].app[1].sampleQuantity=45
#*.V[23].app[1].sampleQuantity=45
#*.V[24].app[1].sampleQuantity=45
#*.V[25].app[1].sampleQuantity=45
#*.V[26].app[1].sampleQuantity=45
#*.V[27].app[1].sampleQuantity=45
#*.V[28].app[1].sampleQuantity=45
#*.V[29].app[1].sampleQuantity=45

